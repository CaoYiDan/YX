//
//  PrefixHeader.pch
//  YaoXiu
//
//  Created by 伯爵 on 2019/12/24.
//  Copyright © 2019 GangMeiTanGongXu. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#define ScreenWidth ([UIScreen mainScreen].bounds.size.width)
#define ScreenHeight ([UIScreen mainScreen].bounds.size.height)


#define  Color40 m_Color_RGB(40, 40, 40)

/** 苹方常规 */
#define m_FontPF_Regular_WithSize(fontSize) [UIFont fontWithName:@"PingfangSC-Regular" size:(fontSize)]

/** 苹方中黑 */
#define m_FontPF_Medium_WithSize(fontSize) [UIFont fontWithName:@"PingfangSC-Medium" size:(fontSize)]

/** 苹方中粗 */
#define m_FontPF_Semibold_WithSize(fontSize) [UIFont fontWithName:@"PingFangSC-Semibold" size:(fontSize)]

#define Token [[NSUserDefaults standardUserDefaults] objectForKey:@"user_token"]

//size

#define StatusBarHeight [UIApplication sharedApplication].statusBarFrame.size.height
#define SafeAreaTopHeight ((ScreenHeight >= 812.0) && [[UIDevice currentDevice].model isEqualToString:@"iPhone"] ? 88.0 : 64.0)
#define SafeAreaStatusHeight ((ScreenHeight >= 812.0) && [[UIDevice currentDevice].model isEqualToString:@"iPhone"] ? 44 : 20)

#define SafeAreaBottomHeight ((ScreenHeight >= 812.0) && [[UIDevice currentDevice].model isEqualToString:@"iPhone"]  ? 34.0 : 0.0)

#define ScreenFrame [UIScreen mainScreen].bounds

#define UIViewX(control) (control.frame.origin.x)
#define UIViewY(control) (control.frame.origin.y)

#define UIViewWidth(view) CGRectGetWidth(view.frame)
#define UIViewHeight(view) CGRectGetHeight(view.frame)

#define UIViewMaxX(view) CGRectGetMaxX(view.frame)
#define UIViewMaxY(view) CGRectGetMaxY(view.frame)

#define UIViewMinX(view) CGRectGetMinX(view.frame)
#define UIViewMinY(view) CGRectGetMinY(view.frame)

#define UIViewMidX(view) CGRectGetMidX(view.frame)
#define UIViewMidY(view) CGRectGetMidY(view.frame)

//颜色rgb

#define UIColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16)) / 255.0 \
green:((float)((rgbValue & 0xFF00) >> 8)) / 255.0    \
blue:((float)(rgbValue & 0xFF)) / 255.0             \
alpha:1.0]

#define RGBA(R, G, B, A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]

#define ColorWhiteAlpha10 RGBA(255.0, 255.0, 255.0, 0.1)
#define ColorWhiteAlpha20 RGBA(255.0, 255.0, 255.0, 0.2)
#define ColorWhiteAlpha40 RGBA(255.0, 255.0, 255.0, 0.4)
#define ColorWhiteAlpha60 RGBA(255.0, 255.0, 255.0, 0.6)
#define ColorWhiteAlpha80 RGBA(255.0, 255.0, 255.0, 0.8)

#define ColorBlackAlpha1 RGBA(0.0, 0.0, 0.0, 0.01)
#define ColorBlackAlpha5 RGBA(0.0, 0.0, 0.0, 0.05)
#define ColorBlackAlpha10 RGBA(0.0, 0.0, 0.0, 0.1)
#define ColorBlackAlpha20 RGBA(0.0, 0.0, 0.0, 0.2)
#define ColorBlackAlpha40 RGBA(0.0, 0.0, 0.0, 0.4)
#define ColorBlackAlpha60 RGBA(0.0, 0.0, 0.0, 0.6)
#define ColorBlackAlpha80 RGBA(0.0, 0.0, 0.0, 0.8)
#define ColorBlackAlpha90 RGBA(0.0, 0.0, 0.0, 0.9)

#define ColorThemeGrayLight RGBA(104.0, 106.0, 120.0, 1.0)
#define ColorThemeGray RGBA(92.0, 93.0, 102.0, 1.0)
#define ColorThemeGrayDark RGBA(20.0, 21.0, 30.0, 1.0)
#define ColorThemeYellow RGBA(250.0, 206.0, 21.0, 1.0)
#define ColorThemeYellowDark RGBA(235.0, 181.0, 37.0, 1.0)
#define ColorThemeBackground RGBA(14.0, 15.0, 26.0, 1.0)
#define ColorThemeGrayDarkAlpha95 RGBA(20.0, 21.0, 30.0, 0.95)

#define ColorThemeRed RGBA(241.0, 47.0, 84.0, 1.0)

#define ColorRoseRed RGBA(220.0, 46.0, 123.0, 1.0)
#define ColorClear [UIColor clearColor]
#define ColorBlack [UIColor blackColor]
#define ColorWhite [UIColor whiteColor]

#define ColorNavBG  m_Color_gray(40)
#define ColorGray  [UIColor grayColor]
#define ColorBlue RGBA(40.0, 120.0, 255.0, 1.0)
#define ColorGrayLight RGBA(40.0, 40.0, 40.0, 1.0)
#define ColorGrayDark RGBA(25.0, 25.0, 35.0, 1.0)
#define ColorGrayDarkAlpha95 RGBA(25.0, 25.0, 35.0, 0.95)
#define ColorSmoke RGBA(230.0, 230.0, 230.0, 1.0)

#define RGB(R,G,B)        [UIColor colorWithRed:R/255.0f green:G/255.0f blue:B/255.0f alpha:1.0f]
#define mainColor        [UIColor colorWithRed:40/255.0f green:40/255.0f blue:40/255.0f alpha:1.0f]
#define KClearColor [UIColor clearColor]
#define KMargin (15)
#define KMainYellowColor RGB(250, 212, 72)

//safe thread
#define dispatch_main_sync_safe(block)\
if ([NSThread isMainThread]) {\
block();\
} else {\
dispatch_sync(dispatch_get_main_queue(), block);\
}

#define dispatch_main_async_safe(block)\
if ([NSThread isMainThread]) {\
block();\
} else {\
dispatch_async(dispatch_get_main_queue(), block);\
}

//visitor
#define writeVisitor(visitor)\
({\
NSDictionary *dic = [visitor toDictionary];\
NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
[defaults setObject:dic forKey:@"visitor"];\
[defaults synchronize];\
})


#define readVisitor()\
({\
NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];\
NSDictionary *dic = [defaults objectForKey:@"visitor"];\
Visitor *visitor = [[Visitor alloc] initWithDictionary:dic error:nil];\
(visitor);\
})

//Font
#define SuperSmallFont m_FontPF_Regular_WithSize(10)
#define SuperSmallBoldFont m_FontPF_Semibold_WithSize(10)

#define SmallFont m_FontPF_Regular_WithSize(12)
#define SmallBoldFont m_FontPF_Semibold_WithSize(12)

#define MediumFont m_FontPF_Regular_WithSize(14)
#define MediumBoldFont m_FontPF_Semibold_WithSize(14)

#define BigFont m_FontPF_Regular_WithSize(16)
#define BigBoldFont m_FontPF_Semibold_WithSize(16)

#define LargeFont m_FontPF_Regular_WithSize(18)
#define LargeBoldFont m_FontPF_Semibold_WithSize(18)

#define SuperBigFont m_FontPF_Regular_WithSize(26)
#define SuperBigBoldFont m_FontPF_Semibold_WithSize(26)


#import "YXImport.h"
#pragma mark - UI
// 屏幕宽高
#define SCREEN_WIDTH        [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT       [UIScreen mainScreen].bounds.size.height

// 适配比例
#define ADAPTATIONRATIO     SCREEN_WIDTH / 750.0f
#define AutoSize(x)  ((SCREEN_WIDTH / 750.0f)*x)
// 导航栏高度与tabbar高度
#define NAVBAR_HEIGHT       (IS_iPhoneX ? 88.0f : 64.0f)
#define TABBAR_HEIGHT       (IS_iPhoneX ? 83.0f : 49.0f)
#define SAFE_NAVBAR_HEIGHT       (IS_iPhoneX ? 88.0f : 64.0f)
// 状态栏高度
#define STATUSBAR_HEIGHT    (IS_iPhoneX ? 44.0f : 20.0f)

// 判断是否是iPhone X系列
#define IS_iPhoneX      ([UIScreen instancesRespondToSelector:@selector(currentMode)] ?\
(\
CGSizeEqualToSize(CGSizeMake(375, 812),[UIScreen mainScreen].bounds.size)\
||\
CGSizeEqualToSize(CGSizeMake(812, 375),[UIScreen mainScreen].bounds.size)\
||\
CGSizeEqualToSize(CGSizeMake(414, 896),[UIScreen mainScreen].bounds.size)\
||\
CGSizeEqualToSize(CGSizeMake(896, 414),[UIScreen mainScreen].bounds.size))\
:\
NO)

// 颜色
#define GKColorRGBA(r, g, b, a) [UIColor colorWithRed:(r / 255.0) green:(g / 255.0) blue:(b / 255.0) alpha:a]
#define GKColorRGB(r, g, b)     GKColorRGBA(r, g, b, 1.0)
#define GKColorGray(v)          GKColorRGB(v, v, v)

#define GKColorHEX(hexValue, a) GKColorRGBA(((float)((hexValue & 0xFF0000) >> 16)), ((float)((hexValue & 0xFF00) >> 8)), ((float)(hexValue & 0xFF)), a)

#define GKColorRandom           GKColorRGB(arc4random() % 255, arc4random() % 255, arc4random() % 255)

#define HEXCOLOR(hexValue,a) [UIColor colorWithRed:((float)((hexValue & 0xFF0000) >> 16))/255.0 green:((float)((hexValue & 0xFF00) >> 8))/255.0  blue:((float)(hexValue & 0xFF))/255.0 alpha:a]

// 接口返回的是number,但是model却用string接收的情况
#define NUMBER_TO_STRING(x) [(x) isKindOfClass:[NSNumber class]]?[NSString stringWithFormat:@"%@",x]:(x)


// 来自YYKit
#ifndef weakify
    #if DEBUG
        #if __has_feature(objc_arc)
        #define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
        #else
        #define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
        #endif
    #else
        #if __has_feature(objc_arc)
        #define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
        #else
        #define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
        #endif
    #endif
#endif

#ifndef strongify
    #if DEBUG
        #if __has_feature(objc_arc)
        #define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
        #else
        #define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
        #endif
    #else
        #if __has_feature(objc_arc)
        #define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
        #else
        #define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
        #endif
    #endif
#endif


#endif /* PrefixHeader_pch */
